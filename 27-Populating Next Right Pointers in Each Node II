intituition behind this question:
we will traverse tree as levle order traversal
at each level we will keep arr for storing level nodes'
so that we can connect to next node, at last node we will connect node to None 


"""
# Definition for a Node.
class Node:
    def __init__(self, val: int = 0, left: 'Node' = None, right: 'Node' = None, next: 'Node' = None):
        self.val = val
        self.left = left
        self.right = right
        self.next = next
"""

class Solution:
    def connect(self, root: 'Node') -> 'Node':
        
        if not root:
            return root
        
        q=[root]
        
        while q:
            
            level=[]
            n=len(q)
            
            for i in range(n):
                node=q.pop(0)
                level.append(node)
                if node.left:
                    q.append(node.left)
                if node.right:
                    q.append(node.right)
                    
            while level:
                
                node=level.pop(0)
                if level:
                    node.next=level[0]
                else:
                    node.next=None
                    
        return root
                
            
        
