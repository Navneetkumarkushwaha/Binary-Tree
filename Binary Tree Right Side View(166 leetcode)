 Binary Tree Right Side View
 # Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:
        if not root:
            return []
        if not root.left and not root.right:
            return [root.val]
        ans=[]
        q=[root]
        while q:
            n=len(q)
            li=[]
            for i in range(n):
                node=q.pop(0)
                li.append(node.val)
                if node and node.left:
                    q.append(node.left)
                if node and node.right:
                    q.append(node.right)
            ans.append(li.pop())
        return ans
            
        
