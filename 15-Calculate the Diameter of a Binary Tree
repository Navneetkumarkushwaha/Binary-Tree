# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def solve(self,root):
        
        if not root:
            return 0
        left = self.solve(root.left)
        right = self.solve(root.right)
        
        temp = max(left,right)
        temp = max(temp,left+right)
        self.ans = max(self.ans,temp)
        
        return max(left,right)+1
        
        
    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:
        self.ans = 0
        self.solve(root)
        return self.ans
        
        
        
        Time Complexity: O(N) 

Space Complexity: O(1) Extra Space + O(H) Recursion Stack space (Where “H”  is the height of binary tree )
